header {
    background-color: #BBBBBB;
    padding: 20px 0;
}

.caja {
    position: relative;
    width: 940px;
    margin: 0 auto;
}

nav {
    position: absolute;
    top: 110px;
    right: 0;
}

nav li {
    display: inline;
    margin: 0 0 0 15px;
}

nav a {
    text-transform: uppercase;
    color: #000000;
    font-weight: bold;
    font-size: 22px;
    text-decoration: none;
}

nav a:hover {
    color: #C78C19;
    text-decoration: underline;
}

footer {
    text-align: center;
    background: url(../HTML5%20y%20CSS3%20parte%202%20-%20Posicionamiento,%20listas%20y%20navegaci%C3%B3n/imagenes/bg.jpg);
    padding: 40px;
}

.copyright {
    color: #FFFFFF;
    font-size: 13px;
    margin: 20px;
}

main {
    width: 940px;
    margin: 0 auto;
}

form {
    margin: 40px 0;
}

/*Para utilizar los mismos estilos en distintos selectores se utiliza la coma*/
form label,
form legend {
    display: block;
    font-size: 20px;
    margin: 0 0 10px;
}

.input-padron {
    display: block;
    margin: 0 0 20px;
    padding: 10px 25px;
    width: 50%;
}

/*El margen que debería ser de 10px para los form label se reescribe, no se suma, para esta clase
ya que el selector de clase tiene mayor "peso"*/
.checkbox-novedades {
    margin: 20px 0;
}

/*Esto sucede ya que hay una jerarquía en la forma de usar un selector, ya que cada forma tiene un "peso"
selector inline en HTML > selector de ID > selector de clase > selector de elemento
Y si se combinan las etiquetas su "peso" se suma*/

.enviar {
    width: 40%;
    padding: 15px 0;
    font-size: 18px;
    font-weight: bold;
    color: white;
    background: orange;
    border: none;
    border-radius: 5px;

    /*La propiedad transition aplica un efecto de transición de un estado a otro,
    como cuando se aplica la pseudoclase :hover,
    Es recomendado utilizar solo la propiedad transition, no sus variantes individuales, para evitar desincronización
    Los valores que se pueden especificar son: propiedad a la que se aplicará, duración, función de tiempo, retardo
    Se puede aplicar el formato a distintos elementos si se separa por coma*/
    transition: all 1s;

    /*La propiedad pointer cambia el tipo de cursos cuando se apunta al elemento*/
    cursor: pointer;
}

.enviar:hover {
    background: darkorange;

    /*La propiedad transform "transforma" el elemento, es decir cambia su tamaño o comportamiento
    Tiene distintos valores posibles:
    como scale() para aumentar el tamaño en una proporción o 
    rotate() para rotar el elemento en su eje según una cantidad en ángulos deg
    Se pueden aplicar varios valores si se separan por espacio*/
    transform: scale(1.2);
    transform-origin: left;
}

table {
    margin: 40px;
}

thead {
    background: #555555;
    color: white;
    font-weight: bold;
}

td,
th {
    border: 1px solid #000000;
    padding: 8px 15px;
}