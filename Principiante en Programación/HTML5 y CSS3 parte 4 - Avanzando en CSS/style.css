body {
    font-family: 'Montserrat', sans-serif;
}

/*Sección de encabezado*/

header {
    background-color: #BBBBBB;
    padding: 20px 0;
}

.caja {
    position: relative;
    width: 940px;
    margin: 0 auto;
}

nav {
    position: absolute;
    top: 110px;
    right: 0;
}

nav li {
    display: inline;
    margin: 0 0 0 15px;
}

nav a {
    text-transform: uppercase;
    color: #000000;
    font-weight: bold;
    font-size: 22px;
    text-decoration: none;
}

nav a:hover {
    color: #C78C19;
    text-decoration: underline;
}

/*Sección de contenido principal*/

.banner {
    width: 100%;
}

.titulo-principal {
    text-align: center;

    /*em es una unidad proporcional según el tamaño de la  fuente del elemento padre,
    el nombre proviene de la medida tipográfica de la letra M, pronunciada "em" en inglés, 
    por ejemplo en el caso de 2em indica dos veces el tamaño de su padre, el cual es 16px, por lo que resulta 32px*/
    font-size: 2em;

    /*En este caso al ser el tamaño de la fuente del elemento padre 2em (32px), el margen resulta 32px*/
    margin: 0 0 1em;

    /*La propiedad clear no considera a los elementos flotantes, con propiedad float, en una dirección*/
    clear: left;
}

.utensilios {
    width: 120px;

    /*La propiedad float hacer que el elemento se posicione en una dirección y el texto se disperse a su alrededor,
    Es como la  opción de Word para ajustar el texto pegado a la imagen*/
    float: left;
    margin: 0 20px 20px 0;
}

.principal {
    width: 940px;
    padding: 3em 0;
    margin: 0 auto;
    /*Para seleccionar un color también podemos utilizar el la función rgba() que añade un cuarto argumento el cual es la opacidad*/
    background: #FEFEFE;
}

.principal p {
    margin: 0 0 1em;
}

.principal strong {
    font-weight: bold;
}

.principal em {
    font-style: italic;
}

.mapa {
    padding: 3em 0;
    /*Se puede utilizar gradientes con la propiedad background mediante la función linear-gradient,
    sus argumentos se separan por coma y la gradiente va por defecto de abajo hacia arriba desde el primer argumento al último,
    se puede ajustar el alguno de dirección de la gradiente o utilizar otra función como radial-gradient*/
    background: linear-gradient(#FEFEFE, #888888);
}

.mapa p {
    padding: 0 0 2em;
    text-align: center;

}

.mapa-contenido {
    width: 940px;
    margin: 0 auto;
}

.diferenciales {
    padding: 3em 0;
    background: #888888;
}

.contenido-diferenciales {
    width: 640px;
    margin: 0 auto;
}

.lista-diferenciales {
    width: 40%;
    /*inline e inline-block considera los saltos de lína en el código como saltos de línea tipográficos para separar los elementos*/
    /*La mejor solución para evitar el salto de linea es usar flexbox*/
    display: inline-block;
    vertical-align: top;
}

/*Las pseudoclases permiten aplicar estilos a un elemento que está en un estado específico,
en este caso aplica el estilo al primer elemento de varios elementos de la misma etiqueta*/
.lista-diferenciales .items:first-child {
    font-weight: bold;
}

.items {
    /*La propiedad line-height establece el espacio de linea en el texto, como la sangría*/
    line-height: 1.5em;w
}

/*El pseudoelemento ::before coloca un contenido mediante la propiedad content; no acepta código HTMK*/
.items::before {
    content: "★";
}

.imagen-diferenciales {
    width: 60%;
    transition: 400ms;
    /*Para colocar sombras se pueden utilizar las propiedades 
    box-shadow para sombras en bloque y text-shadow para sombras en texto
    sus valores son: inset(opcional para sombra interna), eje X, eje Y (de arriba hacia abajo), difuminación, expansión y color
    y se pueden aplicar múltiples sombras separadas por coma*/
    box-shadow: 10px 10px 30px 15px #000000;
}

/*La propiedad opacity aplica opacidad al elemento, al 100% no el elemento es completamente visible y al 0% no se vería*/
.imagen-diferenciales:hover {
    opacity: 0.3;
}

.video {
    width: 560px;
    margin: 1em auto;
}

/*Sección de pié de página*/

footer {
    text-align: center;
    background: url(../HTML5%20y%20CSS3%20parte%202%20-%20Posicionamiento,%20listas%20y%20navegaci%C3%B3n/imagenes/bg.jpg);
    padding: 40px;
}

.copyright {
    /*El tamaño por defecto de los textos es de 16px*/
    color: #FFFFFF;
    font-size: 13px;
    margin: 20px;
}

/*Hay algunos combinadores para utilizar mejor los selectores
Por ejemplo con ">": .main > p  
que afecta a los elementos p que son hijos directos de la clase main,
a comparación de main p que afectaría a todos los descendientes como hijos de hijos y así

Ejemplo con "+": img + p
que afecta a todos los elementos p que estaban adyacentes (como primer hermano) de un elemento img,
por lo que solo afectará a los p que estén justo antes de un elemento img

Ejemplo con "~": img + p
que afecta a todos los elementos p que están después (como hermanos) de un elemento img, 
aunque no esten juntos, por lo que puede afectar a varios p que estaban después de un img

Ejemplo con pseudoclase ":not()": .principal p:not(#mision)
que afecta a todos los elementos p de la clase principal menos al que tiene el id #mision*/

/*La propiedades que utilizan medidas pueden utilizar la función calc() para calcular sus valores,
por ejemplo: width: calc(40% - (26px * 4)*/


/*Una técnica para crear diseños responsivos es usar media queries, que se pueden complementar
utilizando medidas proporcionales y un layout (disposición) adaptable o fluida*/
@media screen and (max-width:480px) {
    /*Se centralió el logo para que se vea estilizado en pantallas pequeñas*/
    h1 {
        text-align: center;
    }

    /*Se estableción un position static para que la barra de navegación ocupe una linea, 
    ya que tenía position absolute*/
    nav {
        position: static;
    }

    /*Se estableció un width auto para todos los elementos con width fijo*/
    .caja, .principal, .mapa-contenido, .contenido-diferenciales, .video{
        width: auto;
    }

    /*Se estableció un width 100% a los elementos para que cada uno ocupe una linea*/
    .lista-diferenciales, .imagen-diferenciales {
        width: 100%;
    }
}

/*Algunos áreas de TI

UX designer: encargado de la relación entre la empresa y el cliente mediante sus productos o servicios
UI designer: diseña la presentación de las aplicaciones de la empresa con las que interactuará el usuario
Desarrollador móvil: desarrolla aplicaciones para Android o IOS
Desarrollador Full-Stack: se encarga del desarrollo backend y frontend al mismo tiempo
CDO (Chief Digital Officer): encargado de alinear los objetivos de la empresa e incorporar las nuevas tecnologías digitales
Científico de datos (Big Data): se encarga de analizar los datos de las empresas para obtener información útil
Gerente de proyectos: encargado de idear, planificar, gestionar y realizar los proyectos de la empresa*/

/*Medidas en CSS

px (píxel) no es recomendado utilizarlo ya que es una medida absoluta, 
así que será la misma en todos los dispositivos y por ello 
no se "adaptará" según las distintas pantallas con distintas medidas de píxeles de todos los disposivos que existan
En CSS no se utiliza un pixel real (hardware) sino un pixel de referencia

pt (point o punto), cm, mm, in (inches o pulgadas) y pc (paica) también son medidas absolutas 
por lo que no son recomendadas para diseñar una página responsiva,
Son usualmente utilizados en tipografía o solo en CSS para impresiones
1 in = 2,54 cm = 25,4 mm = 72 pt = 6 pc

em, una medida relativa que se basa en el tamaño de fuente del contenedor padre, que por defecto en varios navegadores es 16px,
es útil para mantener proporciones jerárjicas entre pocas anidaciones ya que mientras más anidaciones más complejidad

rem (root em), una medida relativa similar a em que se basa en el tamaño fuente del elemento raíz, el html,
que inicialmente es 16px por lo que la proporción será la misma en cualquier anidación
Para utilizarla facilmente se suele configurar el font-size de html a 62,5% para que 1rem = 10px y 
utilizar rem para módulos y em para contenidos interiores como también para width, margin, border y padding 

%, una medida relativa similar a em, pero en función al tamaño del contenedor padre,
e igualmente es compleja de mantener mientras más anidaciones
Se suele configuar el ancho y alto independientemente para que sea porcentual según se necesite 

Ex y Ch, son medidas relativas en función al tamaño de la letra x en la fuente definida 
y al ancho del carácter 0, 1ch = 1 carácter si la fuente es monospace, respectivamente
Ambos son usualmente utilizados en tipografía mas que para diseños responsivos
Pero en el caso de ch se puede utilizar para cumplir la regla de diseño de cumplir 45 a 75 carácteres por linea,
estableciendo un max-width de por ejemplo 60ch

vw (Viewport Width), vh (Viewport Height), wmin (Viewport Minimun) y vmax (Viewport Maximun),
basadas en el tamaño de pantalla configurado en el viewport (el área donde se muestra la web en el navegador)
todas basadas porcentualmente en el ancho, alto, mínimo o máximo de los valores del área del viewport
por ejemplo en un viewport configurado a 1600*900:
1vw = 16px
1vh = 9px
1vmin = 9px
1 vmax = 16px
Si bien se ve una medida agradable de utilizar, se debe tener en cuenta su compatibilidad en navegadores
*/

/*Para diseños responsivos se puede utilizar CSS Grid para crear layouts en toda la página y
CSS Flexbox para los elementos que irán en los layouts*/